zabbix_export:
  version: '6.0'
  media_types:
    - name: 'IntelliTrend Mobile'
      type: WEBHOOK
      parameters:
        - name: body
          value: '{ALERT.MESSAGE}'
        - name: entity_id
          value: '{EVENT.ID}'
        - name: sendto
          value: '{ALERT.SENDTO}'
        - name: severity
          value: '{EVENT.NSEVERITY}'
        - name: title
          value: '{ALERT.SUBJECT}'
        - name: type
          value: problem
      script: |
        var logtag = '[ IntelliTrend Mobile Webhook ] ';
        try {
          var params = JSON.parse(value);
          var userparams = JSON.parse(params.sendto);
          var body = {
            data: {
              entity_id: params.entity_id,
              userparams: params.sendto,
              timestamp: String(Date.now()),
              type: params.type,
              title: params.title,
              body: params.body,
              severity: params.severity,
            },
            ppi: userparams.ppi,
            title: params.title,
            body: params.body,
          };
        
          var req = new HttpRequest();
          req.addHeader('Content-Type: application/json');
          req.addHeader('X-Protocol-Version: 1');
          
          var bodystr = JSON.stringify(body);
          Zabbix.Log(4, logtag + 'Request: ' + bodystr);
          var respstr = req.post("https://push.intellitrend.de/zabbix/device/push", bodystr);
          Zabbix.Log(4, logtag + 'Response:' + respstr);
          Zabbix.Log(4, logtag + 'Response Code:' + req.getStatus());
        
          if (req.getStatus() >= 300 || req.getStatus() < 200) {
              var resp = JSON.parse(respstr);
              throw 'error: ' + resp.error;
          }
        
          return "sent";
        } catch (error) {
            Zabbix.Log(3, logtag + 'ERROR: ' + error);
            throw 'Sending failed: ' + error;
        }
      message_templates:
        - event_source: TRIGGERS
          operation_mode: PROBLEM
          subject: '{TRIGGER.SEVERITY}: {TRIGGER.STATUS}: {EVENT.NAME}'
          message: |
            Trigger: {EVENT.NAME}
            Trigger status: {TRIGGER.STATUS}
            Trigger severity: {TRIGGER.SEVERITY}
            Time: {TIME}
            
            Item values:
            1. {ITEM.NAME1} ({HOST.NAME1}:{ITEM.KEY1}): {ITEM.VALUE1}
            
            Description:
            {TRIGGER.DESCRIPTION}
        - event_source: TRIGGERS
          operation_mode: RECOVERY
          subject: '[Recovered]: {EVENT.RECOVERY.NAME}'
          message: |
            Trigger: {EVENT.RECOVERY.NAME}
            Trigger status: {TRIGGER.STATUS}
            Trigger severity: {TRIGGER.SEVERITY}
            Time: {TIME}
            
            Item values:
            1. {ITEM.NAME1} ({HOST.NAME1}:{ITEM.KEY1}): {ITEM.VALUE1}
            
            Note:
            The problem has been fixed. The status has changed from "{TRIGGER.SEVERITY}" to {TRIGGER.STATUS}.  
            
            Under "Acknowledgements" you can view the confirmation from the relevant employee. If no data is displayed here, this problem has not been acknowledged / viewed by any employee.
        - event_source: TRIGGERS
          operation_mode: UPDATE
          subject: 'Updated problem in {EVENT.AGE}: {EVENT.NAME}'
          message: |
            {USER.FULLNAME} {EVENT.UPDATE.ACTION} problem at {EVENT.UPDATE.DATE} {EVENT.UPDATE.TIME}.
            {EVENT.UPDATE.MESSAGE}
            
            Current problem status is {EVENT.STATUS}, age is {EVENT.AGE}, acknowledged: {EVENT.ACK.STATUS}.
